<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avg.lawsuitmanagement.member.repository.MemberMapperRepository">

    <select id="selectMemberByEmail" parameterType="java.lang.String" resultType="MemberDto">
        select id, email, password, name, hierarchy_id, phone, address, address_detail, role_id, created_at, updated_at, is_deleted
        from member m
        where m.email = #{email}
          and m.is_deleted = false
    </select>

    <select id="selectMemberByEmailContainDeleted" parameterType="java.lang.String" resultType="MemberDto">
        select id, email, password, name, hierarchy_id, phone, address, address_detail, role_id, created_at, updated_at, is_deleted
        from member m
        where m.email = #{email}
    </select>

    <insert id="insertMember" parameterType="InsertMemberParam">
        insert into member (email, password, name, phone, hierarchy_id, address, address_detail,
        role_id)
        values (#{email}, #{password}, #{name}, #{phone}, #{hierarchyId}, #{address},
        #{addressDetail}, #{roleId})
        <selectKey keyProperty="id" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="selectMemberListById" parameterType="java.util.List">
        select id, email, password, name, hierarchy_id, phone, address, address_detail, role_id, created_at, updated_at, is_deleted
        from member
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateMember" parameterType="UpdateMemberParam">
        update member
        set email        = #{email},
            name         = #{name},
            phone        = #{phone},
            address      = #{address},
            address_detail= #{addressDetail},
            hierarchy_id = #{hierarchyId},
            role_id      = #{roleId}
        where id = #{id};
    </update>

    <select id="selectEmployeeListBySearchCondition"
      parameterType="searchEmployeeListParam"
      resultType="MemberDtoNonPass">
        select
        id, email, name, hierarchy_id, phone, address, address_detail, role_id, created_at, updated_at
        from
        member
        <where>
            <if test="searchWord != null and searchWord != ''">
                and (name like concat('%', #{searchWord}, '%')
                or email like concat('%', #{searchWord}, '%'))
            </if>

            <if test="hierarchyId != 0">
                and hierarchy_id = #{hierarchyId}
            </if>

            <if test="roleId != 0">
                and role_id = #{roleId}
            </if>
            <if test="roleId == 0">
                and role_id != 1
            </if>
            and is_deleted = false
        </where>
        <choose>
            <when
              test="sortKey != null and sortKey != '' and sortOrder != null and sortOrder.toUpperCase() == 'ASC'">
                order by ${sortKey} asc
            </when>
            <when
              test="sortKey != null and sortKey != '' and sortOrder != null and sortOrder.toUpperCase() == 'DESC'">
                order by ${sortKey} desc
            </when>
            <otherwise>
                order by created_at desc
            </otherwise>
        </choose>

        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="selectMemberById" parameterType="java.lang.Long" resultType="MemberDtoNonPass">
        select id,
               email,
               name,
               hierarchy_id,
               phone,
               address,
               address_detail,
               role_id,
               created_at,
               updated_at
        from member
        where id = #{id}

    </select>

    <select id="selectEmployeeListBySearchConditionCount" parameterType="searchEmployeeListParam"
      resultType="int">
        select
        count(*)
        from
        member
        <where>
            <if test="searchWord != null and searchWord != ''">
                and (name like concat('%', #{searchWord}, '%')
                or email like concat('%', #{searchWord}, '%'))
            </if>

            <if test="hierarchyId != 0">
                and hierarchy_id = #{hierarchyId}
            </if>

            <if test="roleId != 0">
                and role_id = #{roleId}
            </if>
            <if test="roleId == 0">
                and role_id != 1
            </if>

            and is_deleted = false
        </where>
    </select>

    <select id="selectMemberIdListByLawsuitId" parameterType="java.lang.Long">
        select member_id
        from lawsuit_member_map
        where lawsuit_id = #{lawsuitId}
          and is_deleted = false;
    </select>

    <update id="deleteEmployeeFromLawsuit" parameterType="DeleteEmployeeFromLawsuitParam">
        update lawsuit_member_map
        set is_deleted = true
        where lawsuit_id = #{lawsuitId}
          and member_id = #{employeeId}
    </update>

</mapper>