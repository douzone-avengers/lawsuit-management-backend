<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avg.lawsuitmanagement.lawsuit.repository.LawsuitMapperRepository">

    <select id="selectClientLawsuitList" parameterType="SelectClientLawsuitListParam"
      resultType="LawsuitDto">
        select l.*
        from lawsuit l
        join lawsuit_client_map map on l.id = map.lawsuit_id
        where map.client_id = #{clientId}
        and l.is_deleted = false
        <if test="searchWord != ''">
            and (
            name like concat('%', #{searchWord}, '%') or
            lawsuit_num like concat('%', #{searchWord}, '%')
            )
        </if>
        <if test="lawsuitStatus != null">
            and lawsuit_status = #{lawsuitStatus}
        </if>
        <choose>
            <when
              test="sortKey != null and sortKey != '' and sortOrder != null and sortOrder.toUpperCase() == 'ASC'"
            >
                order by ${sortKey} asc
            </when>
            <when
              test="sortKey != null and sortKey != '' and sortOrder != null and sortOrder.toUpperCase() == 'DESC'"
            >
                order by ${sortKey} desc
            </when>
            <otherwise>
                order by l.created_at desc
            </otherwise>
        </choose>
        <if test="limit != 0 or offset != 0">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <select id="countLawsuitsStatusByClientId" parameterType="SelectClientLawsuitListParam"
      resultType="com.avg.lawsuitmanagement.lawsuit.dto.LawsuitCountDto">
        select count(*) as total,
        sum(case when `lawsuit_status` = 'REGISTRATION' then 1 else 0 end) as
        registration,
        sum(case when `lawsuit_status` = 'PROCEEDING' then 1 else 0 end) as proceeding,
        sum(case when `lawsuit_status` = 'CLOSING' then 1 else 0 end) as closing
        from `lawsuit`
        where `id` in (select `lawsuit_id`
        from `lawsuit_client_map`
        where `client_id` = #{clientId})
        and `is_deleted` = 0
        <if test="searchWord != ''">
            and (
            name like concat('%', #{searchWord}, '%') or
            lawsuit_num like concat('%', #{searchWord}, '%')
            )
        </if>
    </select>

    <select id="selectEmployeeLawsuitList" parameterType="SelectEmployeeLawsuitListParam"
      resultType="LawsuitDto">
        select l.*
        from lawsuit l
        join lawsuit_member_map map on l.id = map.lawsuit_id
        where map.member_id= #{memberId}
        and l.is_deleted = false
        and map.is_deleted = false
        <if test="searchWord != ''">
            and (
            name like concat('%', #{searchWord}, '%') or
            lawsuit_num like concat('%', #{searchWord}, '%')
            )
        </if>
        order by l.created_at desc
        <if test="limit != 0 or offset != 0">
            limit #{limit} offset #{offset}
        </if>
    </select>

    <select id="selectClientLawsuitCountBySearchWordAndLawsuitStatus"
      parameterType="SelectClientLawsuitListParam">
        select count(*)
        from lawsuit l
        join lawsuit_client_map map on l.id = map.lawsuit_id
        where map.client_id = #{clientId}
        and l.is_deleted = false
        <if test="searchWord != ''">
            and (
            name like concat('%', #{searchWord}, '%') or
            lawsuit_num like concat('%', #{searchWord}, '%')
            )
        </if>
        <if test="lawsuitStatus != null">
            and lawsuit_status = #{lawsuitStatus}
        </if>
    </select>

    <select id="selectEmployeeLawsuitCountBySearchWord"
      parameterType="SelectEmployeeLawsuitListParam">
        select count(*)
        from lawsuit l
        join lawsuit_member_map map on l.id = map.lawsuit_id
        where map.member_id = #{memberId}
        and l.is_deleted = false
        and map.is_deleted = false
        <if test="searchWord != ''">
            and (
            name like concat('%', #{searchWord}, '%') or
            lawsuit_num like concat('%', #{searchWord}, '%')
            )
        </if>
    </select>

    <select id="selectLawsuitById" parameterType="java.lang.Long">
        select *
        from lawsuit
        where id = #{lawsuitId}
          and is_deleted = false;
    </select>

    <insert id="insertLawsuit" parameterType="InsertLawsuitParam">
        insert into lawsuit (lawsuit_type, name, court_id, commission_fee, contingent_fee,
                             lawsuit_status, lawsuit_num, result)
        values (#{lawsuitType}, #{name}, #{courtId}, #{commissionFee}, #{contingentFee},
                #{lawsuitStatus}, #{lawsuitNum}, null);
    </insert>

    <!-- 추가한 데이터의 id 값을 가져옴 -->
    <select id="getLastInsertedLawsuitId" resultType="java.lang.Long">
        SELECT LAST_INSERT_ID();
    </select>

    <!-- lawsuit_client_map 테이블에 데이터 추가 -->
    <insert id="insertLawsuitClientMap" parameterType="InsertLawsuitClientMemberIdParam">
        INSERT INTO lawsuit_client_map (lawsuit_id, client_id)
        VALUES
        <foreach item="clientId" collection="clientId" separator=",">
            (#{lawsuitId}, #{clientId})
        </foreach>
    </insert>

    <!-- lawsuit_member_map 테이블에 데이터 추가 -->
    <insert id="insertLawsuitMemberMap" parameterType="InsertLawsuitClientMemberIdParam">
        INSERT INTO lawsuit_member_map (lawsuit_id, member_id)
        VALUES
        <foreach item="memberId" collection="memberId" separator=",">
            (#{lawsuitId}, #{memberId})
        </foreach>
    </insert>

    <select id="selectLawsuitList">
        select *
        from lawsuit
        where is_deleted = false;
    </select>

    <update id="updateLawsuitInfo">
        update lawsuit
        set lawsuit_type   = #{lawsuit_type},
            name           = #{name},
            court_id       = #{court_id},
            commission_fee = #{commission_fee},
            contingent_fee = #{contingent_fee},
            lawsuit_status = #{lawsuit_status},
            lawsuit_num    = #{lawsuit_num},
            result         = #{result},
            judgement_date = #{judgement_date}
        where id = #{lawsuitId};
    </update>

    <select id="selectClientByLawsuitId" parameterType="java.lang.Long">
        select client_id
        from lawsuit_client_map
        where lawsuit_id = #{lawsuitId};

    </select>

    <select id="selectMemberByLawsuitId" parameterType="java.lang.Long">
        select member_id
        from lawsuit_member_map
        where lawsuit_id = #{lawsuitId};
    </select>

    <update id="deleteLawsuitInfo" parameterType="java.lang.Long">
        update lawsuit
        set is_deleted = true
        where id = #{lawsuitId};
    </update>

    <update id="deleteLawsuitClientMap" parameterType="java.lang.Long">
        update lawsuit_client_map
        set is_deleted = true
        where lawsuit_id = #{lawsuitId};
    </update>

    <update id="deleteLawsuitMemberMap" parameterType="java.lang.Long">
        update lawsuit_member_map
        set is_deleted = true
        where lawsuit_id = #{lawsuitId};
    </update>

    <!-- cliendId가 속한 사건별 의뢰인 수 -->
    <select id="selectLawsuitCountByClientId" parameterType="java.lang.Long">
        select lcm1.lawsuit_id, count(*)
        from lawsuit_client_map lcm1
                 join lawsuit_client_map lcm2 on lcm1.lawsuit_id = lcm2.lawsuit_id
        where lcm1.is_deleted = false
          and lcm1.client_id = #{clientId}
        group by lcm1.lawsuit_id;
    </select>

    <!-- '사건-의뢰인' 매핑 테이블에서 해당 의뢰인 정보 삭제 -->
    <update id="deleteLawsuitClientMapByClientId" parameterType="java.lang.Long">
        update lawsuit_client_map
        set is_deleted = true
        where client_id = #{clientId};
    </update>

    <!-- 의뢰인에 대한 사건 조회 -->
    <select id="selectLawsuitByClientId" parameterType="java.lang.Long">
        select *
        from lawsuit
        where id in (select lawsuit_id
                     from lawsuit_client_map
                     where lawsuit.is_deleted = false
                       and client_id = #{clientId});
    </select>

    <select id="selectBasicLawInfo"
      parameterType="java.lang.Long"
      resultType="com.avg.lawsuitmanagement.lawsuit.dto.LawsuitBasicRawDto">
        SELECT l.id             `lawsuit_id`,
               l.lawsuit_num    `lawsuit_num`,
               l.name           `lawsuit_name`,
               l.lawsuit_type   `lawsuit_type`,
               l.lawsuit_status `lawsuit_status`,
               l.commission_fee `lawsuit_commission_fee`,
               l.contingent_fee `lawsuit_contingent_fee`,
               co.name_kr       `court_name`,
               m.id             `employee_id`,
               m.name           `employee_name`,
               m.email          `employee_email`,
               c.id             `client_id`,
               c.name           `client_name`,
               c.email          `client_email`
        FROM lawsuit l
                 LEFT JOIN court co ON l.court_id = co.id
                 LEFT JOIN lawsuit_member_map lm ON lm.lawsuit_id = l.id
                 LEFT JOIN member m ON lm.member_id = m.id
                 LEFT JOIN lawsuit_client_map lc ON lc.lawsuit_id = l.id
                 LEFT JOIN client c ON lc.client_id = c.id
        WHERE l.is_deleted = false
          AND lm.is_deleted = false
          AND m.is_deleted = false
          AND lc.is_deleted = false
          AND c.is_deleted = false
          AND l.id = #{lawsuitId};
    </select>

    <update id="updateLawsuitStatus"
      parameterType="com.avg.lawsuitmanagement.lawsuit.repository.param.LawsuitStatusUpdateParam">
        UPDATE lawsuit l
        SET l.lawsuit_status = #{status}
        WHERE l.is_deleted = false
          AND l.id = #{id}
    </update>

    <select id="selectPrintInfo"
      parameterType="java.lang.Long"
      resultType="com.avg.lawsuitmanagement.lawsuit.dto.LawsuitPrintRawDto">
        SELECT l.id             `lawsuit_id`,
               l.name           `lawsuit_name`,
               l.lawsuit_num    `lawsuit_num`,
               l.lawsuit_type   `lawsuit_type`,
               l.commission_fee `lawsuit_commission_fee`,
               l.contingent_fee `lawsuit_contingent_fee`,
               l.result         `lawsuit_judgement_result`,
               l.judgement_date `lawsuit_judgement_date`,
               c.id             `client_id`,
               c.name           `client_name`,
               m.id             `member_id`,
               m.name           `member_name`,
               co.name_kr       `court_name`,
               a.id             `advice_id`,
               a.title          `advice_title`,
               a.contents       `advice_contents`,
               a.adviced_at     `advice_date`,
               e.id             `expense_id`,
               e.contents       `expense_contents`,
               e.amount         `expense_amount`,
               e.spening_at     `expense_date`
        FROM lawsuit l
                 LEFT JOIN lawsuit_client_map lc ON l.id = lc.lawsuit_id
                 LEFT JOIN lawsuit_member_map lm ON l.id = lm.lawsuit_id
                 LEFT JOIN court co ON co.id = l.court_id
                 LEFT JOIN expense e ON l.id = e.lawsuit_id
                 LEFT JOIN advice a ON l.id = a.lawsuit_id
                 LEFT JOIN advice_client_map ac ON a.id = ac.advice_id
                 LEFT JOIN client c ON c.id = ac.client_id
                 LEFT JOIN advice_member_map am ON a.id = am.advice_id
                 LEFT JOIN member m ON m.id = am.member_id
        WHERE l.is_deleted = false
          AND lc.is_deleted = false
          AND lm.is_deleted = false
          AND e.is_deleted = false
          AND a.is_deleted = false
          AND ac.is_deleted = false
          AND c.is_deleted = false
          AND am.is_deleted = false
          AND m.is_deleted = false
          AND l.id = #{id}
    </select>
</mapper>