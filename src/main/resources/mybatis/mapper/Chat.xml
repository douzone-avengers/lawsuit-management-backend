<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avg.lawsuitmanagement.chat.repository.ChatRepository">
    <select id="searchUserByEmail"
      parameterType="java.lang.String"
      resultType="com.avg.lawsuitmanagement.chat.dto.UserSearchRaw">
        SELECT m.id      `id`,
               m.email   `email`,
               m.name    `name`,
               h.name_kr `hierarchy`
        FROM member m
                 LEFT JOIN hierarchy h ON m.hierarchy_id = h.id
        WHERE m.is_deleted = false
          AND m.role_id != 1
          AND m.email = #{email}
        ORDER BY m.name
    </select>
    <select id="searchUserDetailByEmail"
      parameterType="java.lang.String"
      resultType="com.avg.lawsuitmanagement.chat.dto.UserSearchDetailRaw">
        SELECT DISTINCT m.id           `id`,
                        m.email        `email`,
                        m.name         `name`,
                        h.name_kr      `hierarchy`,
                        l.id           `lawsuit_id`,
                        l.lawsuit_type `lawsuit_type`,
                        l.lawsuit_num  `lawsuit_num`,
                        l.name         `lawsuit_name`
        FROM member m
                 LEFT JOIN hierarchy h ON m.hierarchy_id = h.id
                 LEFT JOIN lawsuit_member_map lm ON m.id = lm.member_id
                 LEFT JOIN lawsuit l ON lm.lawsuit_id = l.id
        WHERE m.is_deleted = false
          AND (lm.is_deleted = false OR lm.is_deleted IS NULL)
          AND (l.is_deleted = false OR l.is_deleted IS NULL)
# TODO: 종결된 사건은 제외하는 조건 추가
          AND m.role_id != 1
          AND m.email = #{email}
        ORDER BY l.id DESC
    </select>
    <select id="searchFriendsById"
      parameterType="java.lang.Long"
      resultType="com.avg.lawsuitmanagement.chat.dto.UserSearchRaw">
        SELECT m.id      `id`,
               m.email   `email`,
               m.name    `name`,
               h.name_kr `hierarchy`
        FROM chat_friend f
                 LEFT JOIN member m ON f.friend_id = m.id
                 LEFT JOIN hierarchy h ON m.hierarchy_id = h.id
        WHERE f.is_deleted = false
          AND (m.is_deleted = false OR m.is_deleted IS NULL)
          AND m.role_id != 1
          AND f.user_id = #{id}
        ORDER BY m.name

    </select>
    <select id="checkIsFriend"
      parameterType="com.avg.lawsuitmanagement.chat.dto.UserFriendParam"
      resultType="java.lang.Boolean">
        SELECT IF(COUNT(*) >= 1, TRUE, FALSE)
        FROM chat_friend
        WHERE is_deleted = false
          AND user_id = #{userId}
          AND friend_id = #{friendId}
    </select>
    <insert id="addFriend"
      parameterType="com.avg.lawsuitmanagement.chat.dto.UserFriendParam">
        INSERT INTO chat_friend (user_id, friend_id)
        VALUES (#{userId}, #{friendId})
    </insert>
</mapper>